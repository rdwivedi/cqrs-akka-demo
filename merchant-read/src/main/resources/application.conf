akka {
	systemName = "nearbuy-actor-system"
	extensions = ["akka.contrib.pattern.DistributedPubSubExtension", "com.romix.akka.serialization.kryo.KryoSerializationExtension"]
	loglevel = "INFO"
	log-dead-letters = 10
	log-dead-letters-during-shutdown = on

  	actor {
    	provider = "akka.cluster.ClusterActorRefProvider"
    	serialize-messages = on
    	serialize-creators = on
    	serializers {
	      java = "akka.serialization.JavaSerializer"
	      proto = "akka.remote.serialization.ProtobufSerializer"
	    }
	    serialization-bindings {
	      "java.lang.String" = java
	      "com.nearbuy.merchant.model.Merchant"=java
	    }
  	}
	
	remote {
		enabled-transports = ["akka.remote.netty.tcp"]
   		log-remote-lifecycle-events = off
		
		netty.tcp {
    		hostname=${?CLUSTER_HOST}
    		hostname=127.0.0.1
   			port=${?CLUSTER_PORT}
   			port=2560
  		}
  	}

	cluster {
  		use-dispatcher = cluster-dispatcher
  		
  		auto-down-unreachable-after = 10s
  		gossip-interval = 2s	
  		gossip-time-to-live = 2s
  		unreachable-nodes-reaper-interval = 2s
  		seed-nodes = [
  	    	"akka.tcp://nearbuy-actor-system@127.0.0.1:2551",
			"akka.tcp://nearbuy-actor-system@127.0.0.1:2552"
  	   	]
	}

    contrib.cluster.pub-sub {
		name = distributedPubSubMediator
		routing-logic = random
		gossip-interval = 1s
		removed-time-to-live = 120s
		max-delta-elements = 3000
	}
}
	
	cluster-dispatcher {
		type = "Dispatcher"
		executor = "fork-join-executor"
		fork-join-executor {
			parallelism-min = 4
			parallelism-max = 10
		}
	}
	
	akka.actor.deployment {
	  /QUERY_MODEL_SERVICE{
	    router = random
	    nr-of-instances = 5
	  }
	}